12/25/19

I created a user page in github!

I found that I have to publish from the master branch and the root directory of the memalign.github.io project. I also found that an index.html file with just plaintext contents wouldn't get served for https://memalign.github.io

( I figured this out by googling and finding:
https://github.community/t5/GitHub-Pages/index-html-not-working/td-p/1266 )

Testing editing the note from my iPad.

I'm going to try to publish generate HTML (and an RSS feed) using some hopefully simple JavaScript I can write in the Scriptable app.

I need to give Scriptable the ability to read and write files in this git repo and I'm able to do that in Scriptable's in-app settings by creating a file bookmark. I added one for the top-level directory of this repo and named it "memalign.github.io".

Ok, that's working well and I seem to have the primitives I need to be able to read files and write output files.

Is it possible to add the script code itself to the github repo?

Ah, I think I can have the script copy its own contents over from iCloud documents directory to the github repo.

Ok, I have a crude verson of this working.


12/26/19

Task list:

[x] - Need a test entry 

[x] - Need to convert entries in the entries subdirectory into standalone html pages

- Need a stylesheet that can apply to all pages

[x] - Need a landing index.html page that links to all entries and might show the most recent few? Probably an Index class; should have the title of a post link to the standalone page for it

- Need to flesh out the format of an entry (date, optional image(s), title, html filename, etc)

- Entry HTML pages should specify the right opengraph values, such as image link

- Need to generate an RSS feed

- For images, I need to figure out how to strip location and any other sensitive EXIF metadata


Some thoughts on entry format:
- Filename like #####-post-name.txt
- The file should start with "Title: " and "Date: MM/DD/YYYY"
- Entry text follows

I could make an Entry class for parsing these. It can have methods for outputting an HTML file, the RSS content, etc. I think I'll want to sort them based on the number the filename starts with.

I think it would be good to put generated post html files into a "p" subdirectory so the root of the repo doesn't get too messy.





Task list:

[x] - Need a stylesheet that can apply to all pages

[x] - Need to flesh out the format of an entry (date, optional image(s), title, html filename, etc)

[x] - Entry HTML pages should specify the right opengraph values, such as image link

- Need to generate an RSS feed

[x] - For images, I need to figure out how to strip location and any other sensitive EXIF metadata

- Need to refine stylesheet so the site doesn't look so plain


I'll figure out images next.

Here's a website that talks about removing EXIF data from an image using the Shortcuts app:
https://thenextweb.com/basics/2019/06/27/how-to-remove-metadata-from-your-photos-on-ios/

That appears to work ^_^

I'm using a simple [Image:/path/img.jpg] syntax in the posts themselves.

I need a stylesheet to prevent the image from being a weird size relative to the text.

Ok, I pulled together a quick stylesheet based on something I'm using in a utility app for reading news feeds.


Trying to work on opengraph next. Here's the documentation:
https://ogp.me

I think I should have these entries:
<meta property="og:title" content="The Rock" />
<meta property="og:type" content="website" />
<meta property="og:url" content="http://www.imdb.com/title/tt0117500/" />
<meta property="og:image" content="http://ia.media-imdb.com/images/rock.jpg" />

These go between <head> and </head>



Task list:

- Need to generate an RSS feed

[x] - Need to refine stylesheet so the site doesn't look so plain
[x]     - Take a look at daringfireball, ogp.me for things to try

- Write unit tests for the backlog labelled with TODOs

[x] - Favicon

[x] - Show images with rounded corners


Here's a random thought: I could eventually render notes.txt into a nicer format if I ever want to share it.

I made a favicon and followed the instructions here:
https://favicon.io/favicon-converter/



12/27/19

Task list:

- Need to generate an RSS feed

[x] - Write unit tests for the backlog labelled with TODOs

[x] - Add og description


Here's a page that talks about generating UUIDs in JavaScript:
https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript

I couldn't use the newer implementation because Scriptable didn't understand the "crypto" variable.


12/28/19

Task list:

- Need to generate an RSS feed, add user-visible links to "RSS | JSON feed" to the website


I see that DaringFireball specifies two feeds in its index.html:
	<link rel="alternate"  type="application/atom+xml"     href="/feeds/main" />
	<link rel="alternate"  type="application/json"         href="/feeds/json" />
	
It's annoying to have to generate two feeds...

He currently publishes the most recent 48 entries spanning 11/13/19 - /12/27/19.

Here's documentation about json feeds:
https://jsonfeed.org/version/1

It looks like DaringFireball doesn't include 'image's for items (which I want to do).


Similar to how I have an Index class, I'll probably have a JSONFeed class and an AtomFeed class which are created with the list of entries.

I have the JSON feed almost done being generated though I see now that I could've probably done this with less manual string manipulation:
https://stackoverflow.com/questions/24559625/javascript-escape-double-quotes

I'm not sure that's a lot better unless I find that I need to do more complex character escaping.



Ok, I've got the json feed generating!

I confirmed that Feedly correctly sees and parses the feed!

Ok, I've got the atom feed generating!



Task list:

[x] - Need to confirm that the XML feed looks ok in Feedly

[x] - Need to add direct links ("RSS | JSON feed") to these feeds on the website

[NTBF: abandoning this for now] - See if I can get the feed to open in Apple News like DaringFireball does

[x] - Implement the TODO unit test backlog

All done for now!


1/6/20

Happy new year!

I'll eventually want to be able to style code that's in an entry. I saw an example from Jonathan Diamond's blog here:

http://www.robopenguins.com.s3-website-us-west-1.amazonaws.com/aws-iot-setup/

It doesn't style very nicely on iPhone Safari (code that needs to scroll ended up with two horizontal scroll bars: one for the entire container including line numbers, one for the code itself). It seemed to style well in my news reader, though, where I don't think its original CSS was applied.

Looking at the source for that entry shows some complex HTML, clearly generated by a tool.
I looked at the RSS feed xml to see if it was simpler and it was not.

This website also generates pretty html for code:
http://hilite.me/

It looks like it creates a table, puts the line numbers in one column and the code in another column. It uses <span ...> tags to apply keyword highlighting. Its layout also causes a horizontal scroll. I wonder how hard it would be to tweak so word wrap works... Probably somewhat difficult because the line numbers are just one column.

Here's a blog post that talks about word wrap options for code on websites:
https://abbeyjfitzgerald.com/formatting-code-and-pre-text/

My bet is that it'll be somewhat straightforward to get word-wrapped code to work. But it'll be hard to do that while also showing line numbers (that don't get selected when you try to grab the text).

I think line numbers are optional for snippets on a webpage.


Task list:

- Support code snippets that show in a monospace font and word wrap. No other styling necessary (such as line numbers, syntax highlighting).


1/15/20

I had a thought that I can probably just use monospace font and a word-wrapping <pre> to style code in the simple (but plain) way I would prefer.

I experimented and did some googling. This was helpful discussion:
https://stackoverflow.com/questions/248011/how-do-i-wrap-text-in-a-pre-tag

For now, I found that using a regular div with this CSS is what I want:
#code {
  font-family: Consolas,Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,serif;
  white-space: pre-wrap;
  word-wrap: break-word;
  background: #EEE;
  padding: 5px;
  border-radius: 3px;
}

(This is very similar styling to what stackoverflow uses)

Now, I need to add support for [Code][/Code] (or something similar) in my SiteGenerator. I need to make sure there are no leading linebreaks after the opening <div id='code'> to avoid an undesired empty line at the top of the code.


Task list:

[x] - Support [Code] tag
[x] - Support [Link] tag

I hit a complication for the [Code] tag:
My site generator replaces all line breaks with "<br />\n". 

With pre-wrap behavior, I end up with double line breaks in the rendered HTML. I want the HTML to be readable so I want to keep the "\n"s. The site generator is doing simple regex string replacements so I can't easily leave out the <br />s just in [Code] blocks. I found that I can style br to not be displayed using CSS.

https://stackoverflow.com/questions/17588953/how-to-disable-br-tags-inside-div-by-css/17589039
https://developer.mozilla.org/en-US/docs/Web/CSS/white-space


Task list:

[x] - Add a separator of some kind between entries on the home page
- Implement unit tests for Code and Link

Info to style separator:
https://stackoverflow.com/questions/14821087/horizontal-line-and-right-way-to-code-it-in-html-css